#!/usr/bin/env python3

"""
Zeus Demo Election
"""

import sys
import argparse
from tests.election.makers import mk_election
from tests.election.emulators.election_configs import (
    config_1, config_2, config_3, config_4, config_5, config_6, config_7)


if __name__ == '__main__':
    prog = sys.argv[0]
    usage = '%s [--mixes ...][--abortions]' % prog
    epilog = '\n'
    parser = argparse.ArgumentParser(prog=prog,
                        usage=usage,
                        description=__doc__,
                        epilog=epilog)

    parser.add_argument('--mixes',
                        type=int, default=3, dest='nr_mixes',
                        help="Number of times to mix")

    parser.add_argument('--abortions', action='store_true',
                        dest='show_abortions',
                        help="Run election against several abortion cases")

    args = parser.parse_args()
    nr_mixes = args.nr_mixes
    show_abortions = args.show_abortions

    if not show_abortions:
        mk_election(config=config_1, nr_mixes=nr_mixes).run()
    else:
        mk_election(config=config_2, nr_mixes=nr_mixes).run()
        mk_election(config=config_3, nr_mixes=nr_mixes).run()
        mk_election(config=config_4, nr_mixes=nr_mixes).run()
        mk_election(config=config_5, nr_mixes=nr_mixes).run()
        mk_election(config=config_6, nr_mixes=nr_mixes).run()
        mk_election(config=config_7, nr_mixes=nr_mixes).run()
        mk_election(nr_mixes=nr_mixes, dishonest_trustee=True).run()
